// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id     String @id @default(cuid())
  userId String // clerk user id

  name        String
  description String?

  address String
  email   String
  phone   String

  website String?
  logoUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Category {
  id          String  @id @default(cuid())
  name        String
  description String?

  userId String // clerk user id

  inventoryItems Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, name])
  @@index([userId])
}

enum InventoryStatus {
  IN_STOCK
  LOW_IN_STOCK
  OUT_OF_STOCK
}

model Inventory {
  id     String @id @default(cuid())
  userId String // clerk user id

  categoryId String
  category   Category @relation(references: [id], fields: [categoryId])

  name         String
  sku          String
  description  String?
  unit         String
  quantity     Int
  reorderLevel Int?            @default(0)
  costPrice    Float
  supplier     String?
  status       InventoryStatus @default(IN_STOCK)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, name])
  @@unique([userId, sku])
  @@unique([name, sku])
  @@index([userId])
  @@index([status])
  @@index([categoryId])
}
